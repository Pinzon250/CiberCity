"""Agrego campo cupon_codigo a carrito

Revision ID: 3d1733367923
Revises: a8f24885de19
Create Date: 2025-07-09 14:42:08.749519

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3d1733367923'
down_revision: Union[str, Sequence[str], None] = 'a8f24885de19'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('carritos')
    op.drop_index(op.f('ix_users_correo'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_table('cupon_usos')
    op.drop_index(op.f('ix_imagenes_producto_id'), table_name='imagenes_producto')
    op.drop_table('imagenes_producto')
    op.drop_index(op.f('ix_cupones_codigo'), table_name='cupones')
    op.drop_table('cupones')
    op.drop_table('pedidos')
    op.drop_index(op.f('ix_categorias_id'), table_name='categorias')
    op.drop_table('categorias')
    op.drop_table('pedido_items')
    op.drop_index(op.f('ix_atributos_id'), table_name='atributos')
    op.drop_table('atributos')
    op.drop_table('carrito_items')
    op.drop_index(op.f('ix_productos_id'), table_name='productos')
    op.drop_table('productos')
    op.drop_index(op.f('ix_valores_atributo_id'), table_name='valores_atributo')
    op.drop_table('valores_atributo')
    op.drop_index(op.f('ix_producto_atributos_id'), table_name='producto_atributos')
    op.drop_table('producto_atributos')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('producto_atributos',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('producto_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('valor_atributo_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['producto_id'], ['productos.id'], name=op.f('producto_atributos_producto_id_fkey')),
    sa.ForeignKeyConstraint(['valor_atributo_id'], ['valores_atributo.id'], name=op.f('producto_atributos_valor_atributo_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('producto_atributos_pkey'))
    )
    op.create_index(op.f('ix_producto_atributos_id'), 'producto_atributos', ['id'], unique=False)
    op.create_table('valores_atributo',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('valor', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('atributo_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['atributo_id'], ['atributos.id'], name=op.f('valores_atributo_atributo_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('valores_atributo_pkey'))
    )
    op.create_index(op.f('ix_valores_atributo_id'), 'valores_atributo', ['id'], unique=False)
    op.create_table('productos',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('productos_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('descripcion', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('precio', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('stock', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fecha_creacion', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('categoria_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['categoria_id'], ['categorias.id'], name='productos_categoria_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='productos_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_productos_id'), 'productos', ['id'], unique=False)
    op.create_table('carrito_items',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('carrito_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('producto_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cantidad', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['carrito_id'], ['carritos.id'], name=op.f('carrito_items_carrito_id_fkey')),
    sa.ForeignKeyConstraint(['producto_id'], ['productos.id'], name=op.f('carrito_items_producto_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('carrito_items_pkey'))
    )
    op.create_table('atributos',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('atributos_pkey')),
    sa.UniqueConstraint('nombre', name=op.f('atributos_nombre_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_atributos_id'), 'atributos', ['id'], unique=False)
    op.create_table('pedido_items',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('pedido_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('producto_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cantidad', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('precio_unitario', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['pedido_id'], ['pedidos.id'], name=op.f('pedido_items_pedido_id_fkey')),
    sa.ForeignKeyConstraint(['producto_id'], ['productos.id'], name=op.f('pedido_items_producto_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('pedido_items_pkey'))
    )
    op.create_table('categorias',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('categorias_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('slug', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('padre_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['padre_id'], ['categorias.id'], name='categorias_padre_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='categorias_pkey'),
    sa.UniqueConstraint('nombre', name='categorias_nombre_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('slug', name='categorias_slug_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_categorias_id'), 'categorias', ['id'], unique=False)
    op.create_table('pedidos',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('pagado', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('fecha_pedido', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['users.id'], name=op.f('pedidos_usuario_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('pedidos_pkey'))
    )
    op.create_table('cupones',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('cupones_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('codigo', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('descuento', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=False),
    sa.Column('activo', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('fecha_expiracion', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('max_usos_por_usuario', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('max_usos_global', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='cupones_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_cupones_codigo'), 'cupones', ['codigo'], unique=True)
    op.create_table('imagenes_producto',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('imagen', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('producto_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['producto_id'], ['productos.id'], name=op.f('imagenes_producto_producto_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('imagenes_producto_pkey'))
    )
    op.create_index(op.f('ix_imagenes_producto_id'), 'imagenes_producto', ['id'], unique=False)
    op.create_table('cupon_usos',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cupon_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fecha_uso', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cupon_id'], ['cupones.id'], name=op.f('cupon_usos_cupon_id_fkey')),
    sa.ForeignKeyConstraint(['usuario_id'], ['users.id'], name=op.f('cupon_usos_usuario_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('cupon_usos_pkey'))
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nombres', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('apellidos', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('correo', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('contrase√±a', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_correo'), 'users', ['correo'], unique=True)
    op.create_table('carritos',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['users.id'], name=op.f('carritos_usuario_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('carritos_pkey')),
    sa.UniqueConstraint('usuario_id', name=op.f('carritos_usuario_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
